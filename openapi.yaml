openapi: 3.0.3
info:
  title: Kopfsachen
  version: '0.2'
  description: Kopfsachen e. V. is an association for the promotion of young people's mental health. The goal is to teach the basics of mental health literacy in various educational formats.
  contact:
    name: Kopfsachen e. V.
    email: mail@kopfsachen.org
    url: 'https://www.kopfsachen.org'
paths:
  /self-service/registration/api:
    $ref: '/specs/registration.yaml#/registrationApiInit'
  /self-service/registration:
    $ref: '/specs/registration.yaml#/registrationSubmit'
  /self-service/login/api:
    $ref: '/specs/authentication.yaml#/loginApiInit'
  /self-service/login:
    $ref: '/specs/authentication.yaml#/loginSubmit'
  /self-service/logout:
    $ref: '/specs/authentication.yaml#/logout'
  /user:
    $ref: '/specs/userService.yaml#/userEndpoints'
  /user/settings:
    $ref: '/specs/userService.yaml#/userSettingsEndpoint'
  /users/admin:
    $ref: '/specs/userService.yaml#/adminEndpoints'
  /diary:
    $ref: '/specs/moodDiary.yaml#/endpoints'
  /safetyNet:
    $ref: '/specs/motivator.yaml#/safetyNetEndpoints'

  '/motivator':
    get:
      summary: Get current motivators by userId.
      tags:
        - motivator-service
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/motivator'
                    - $ref: '#/components/schemas/motivatorResult'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-motivator-userId
      description: Get current motivators by userId.
    post:
      summary: Add motivator to user's motivators.
      operationId: post-motivator-userId
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Add motivator to user's motivators.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/motivator'
      tags:
        - motivator-service
    delete:
      summary: Delete a motivator from user's motivators.
      operationId: delete-motivator-userId
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Delete a motivator from user's motivators.
      tags:
        - motivator-service
  '/motivator/result/{motivatorId}':
    parameters:
      - $ref: '#/components/parameters/motivatorId'
    post:
      summary: Add a new result to user's current motivator.
      operationId: post-motivator-userId-feedback-motivatorId
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Add a new result to user's current motivator.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/motivatorResult'
      tags:
        - motivator-service
    delete:
      summary: Delete result from user's current motivator by timestamp.
      operationId: delete-motivator-userId-result-motivatorId
      responses:
        '200':
          description: OK
      description: Delete result from user's current motivator by timestamp.
      tags:
        - motivator-service
  '/notification/{userId}':
    parameters:
      - $ref: '#/components/parameters/userId'
    get:
      summary: Get notifications for user by id.
      tags:
        - notification-service
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/notification'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      operationId: get-notification-userId
      description: Get notifications for user by id.
    post:
      summary: Set notification for user by id.
      operationId: post-notification-userId
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Set notification for user by id.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/notification'
        description: ''
      tags:
        - notification-service
    delete:
      summary: Delete notification for user by id.
      operationId: delete-notification-userId
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
      description: Delete notification for user by id.
      tags:
        - notification-service
  /tilt:
    $ref: '/specs/tilt.yaml#/endpoints'
  /wiki:
    $ref: '/specs/wiki.yaml#/getAll'
  /wiki/{wikiEntryId}:
    $ref: '/specs/wiki.yaml#/getOne'
  /wiki/admin:
    $ref: '/specs/wiki.yaml#/adminCreate'
  /wiki/{wikiEntryId}/admin:
    $ref: '/specs/wiki.yaml#/adminDelete'
components:
  securitySchemes:
    jwt:
      $ref: '/specs/authorization.yaml#/securitySchemes/JWTAuth'
  schemas:
    timestamp:
      title: timestamp
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
    notification:
      title: notification
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        timestamp:
          type: string
          format: date-time
        ttl:
          type: string
          description: 'time to live (i.e., not relevant anymore at specified time)'
          format: date-time
        '':
          type: string
    notificationId:
      title: notificationId
      type: object
      properties:
        id:
          type: string
  headers: {}
  responses: {}
  parameters:
    motivatorId:
      name: motivatorId
      in: path
      required: true
      schema:
        type: integer
  requestBodies: {}
tags:
  - name: user-service
  - name: notification-service
  - name: mood-diary-service
  - name: motivator-service
  - name: wiki-service
  - name: administration-service
  - name: tilt-service
  - name: authentication
    description: 'The authentication API is based on the ORY Kratos HTTP API, but with some additional tweaks. See [Kratos Docs](https://www.ory.sh/docs/kratos/reference/api) and [Mindtastic Docs](github.com/mindtastic/bouncer/wiki) for more information.'
servers:
  - url: 'https://{service}.api.{environment}.mindtastic.lol'
    description: Development API for testing purposes
    variables:
      service:
        default: echo
        description: The requests gets routed to the individual microservice by pattern matching the requests Host header
      environment:
        enum:
          - live
          - stage
          - dev
        default: live
        description: Choose the environment to work on.
